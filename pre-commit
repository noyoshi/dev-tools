#!/bin/bash
# Author: Noah Yoshida
# 
# This check to see if you are commiting anything with a private key, or any
# tokens. It will abort the commit if there was something bad found.
# Note: exit with non-zero exit code to abort the commit

# Constants --------------------------------------------------
THIS_FILE=$(echo $0 | rev | cut -d /  -f 1 | rev)
COMMIT_FILES=$(git diff --cached --name-only)

# Cannot have space-seperated strings, replacing with '-'
declare -a FORBIDDEN_TERMS=("PRIVATE-KEY" 
                            "aws_secret_key_id"
                            "aws_access_key_id")
# ------------------------------------------------------------

set_exit_cond () {
  if [ $1 -eq 0 ] && [ $2 != $THIS_FILE ] # Ignores this file!
  then
    EXIT_COND=1
    echo -e $3
    return 1
  fi
  return 0 
}

# Constants -------------------------------------------------------------
EXIT_COND=0

for i in $COMMIT_FILES;
do
  cat $i | grep "ssh" | grep "alias" &> /dev/null
  set_exit_cond $? $i "Exposing IP address to external machine in:\n\t$i"

  for BAD_STRING in "${FORBIDDEN_TERMS[@]}"; 
  do
    # I want to replace '-' with a space, to get the accurate string 
    UPDATED_STRING=$(echo $BAD_STRING | sed 's/-/ /g')

    cat $i | grep "$UPDATED_STRING" &> /dev/null
    set_exit_cond $? $i "Found $UPDATED_STRING in file:\n\t$i" 
  done
done

[ $EXIT_COND -eq 1 ] && echo "Found something bad, aborting commit..."

# exit based on whether there were violating files or not
exit $EXIT_COND 

